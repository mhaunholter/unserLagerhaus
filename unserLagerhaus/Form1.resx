<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pb_logo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>